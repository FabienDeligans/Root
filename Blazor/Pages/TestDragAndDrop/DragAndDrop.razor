@using MudBlazor.Utilities
@using Common.Models.TestDragAndDrop
@page "/testDragAndDrop"

<h3>DragAndDrop</h3>
@if (_dropzoneItems != null)
{
    
    <div class="d-flex flex-column mud-width-full mud-height-full">
        <MudToolBar Class="gap-4">
            <MudButton OnClick="LoadServerData" Variant="Variant.Filled" Color="Color.Default">Load Data</MudButton>
            <MudButton OnClick="SaveData" Variant="Variant.Filled" Color="Color.Primary">Save Data</MudButton>
            <MudSpacer />
            <MudButton OnClick="Reset" Variant="Variant.Text" Color="Color.Error">Reset Example</MudButton>
        </MudToolBar>

        <MudDropContainer 
            T="DropItem" 
            Items="@_dropzoneItems" 
            @ref="_container" 
            ItemsSelector="@((item,dropzone) => item.Selector == dropzone)" 
            ItemDropped="ItemUpdated" 
            Class="d-flex flex-wrap flex-grow-1">
            <ChildContent>
                
                    <MudPaper Class="ma-4 flex-grow-1">
                        <MudList Clickable="true" Class="d-flex flex-column mud-height-full">
                            <MudListSubheader>Drop Zone </MudListSubheader>
                            <MudDropZone T="DropItem" Identifier="1" Class="flex-grow-1" AllowReorder="true" />
                        </MudList>
                    </MudPaper>
                
            </ChildContent>
            <ItemRenderer>
                <MudListItem Text="@($"{context.Name} ({context.Order})")" />
            </ItemRenderer>
        </MudDropContainer>
    </div>
















}
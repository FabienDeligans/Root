@using Common.Models
@using Common.Models.MES
@using MudBlazor.Utilities
@typeparam T
@inherits ChildComponentBase

@if (OrderItems != null)
{

    <h3>@Title</h3>

    <MudDropContainer T="T"
                      Items="OrderItems"
                      ItemsSelector="@((item, dropzone) => item.DropZone == dropzone)"
                      ItemDropped="ItemUpdated"
                      Class="d-flex flex-wrap flex-grow-1"
                      @ref="_container">

        <ChildContent>
            @if (Zones != null)
            {
                @foreach (var zone in Zones)
                {
                    <MudPaper Class="ma-4 flex-grow-1">
                        <MudList Clickable="true" Class="d-flex flex-column mud-height-full">
                            <MudListSubheader>Zone @zone</MudListSubheader>
                            <MudDropZone T="T" Identifier="@zone" Class="flex-grow-1" AllowReorder="true" />
                        </MudList>
                    </MudPaper>
                }
            }
        </ChildContent>

        <ItemRenderer>
            

            <MudToolBar>
                <MudText>@context.DisplayName</MudText>
                @if (WithEditOption)
                {
                    <MudSpacer />
                    <MudMenu Icon="@Icons.Material.Rounded.MoreHoriz" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" ListClass="pa-2 d-flex flex-column" PopoverClass="mud-elevation-25">
                        <MudButton Size="Size.Small" Color="Color.Error" StartIcon="@Icons.Material.Outlined.Delete" OnClick="@(() => DeleteItem(context))">Delete item</MudButton>
                        <MudButton Size="Size.Small" Color="Color.Default" StartIcon="@Icons.Material.Rounded.Edit" OnClick="@(() => EditItem(context))">Edit item</MudButton>
                    </MudMenu>
                }
            </MudToolBar>

        </ItemRenderer>
    </MudDropContainer>


}



